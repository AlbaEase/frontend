name: Deploy Frontend to EC2

on:
  push:
    branches: [ "deployTest" ]  # 배포시 main으로 변경 필요

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      # Node.js 캐싱 추가
      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build project
        run: npm run build
        
      # 빌드 실패 시 에러 캐치
      - name: Check build status
        run: |
          if [ ! -d "dist" ]; then
            echo "Build failed - dist directory not found"
            exit 1
          fi
      
      - name: List build directory
        run: ls -la dist/
      
      - name: Upload build files via SCP
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "dist/*"
          target: "~/frontend/"
          strip_components: 1  # dist 폴더 내부 파일만 복사
      
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/frontend
            # 기존 컨테이너 정리
            docker-compose down
            docker system prune -f
            # 새 컨테이너 시작 전 이미지 빌드 확인
            docker-compose build --no-cache
            # 컨테이너 시작 및 로그 확인
            docker-compose up -d
            docker-compose logs